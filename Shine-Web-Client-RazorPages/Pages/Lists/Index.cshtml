@page
@model Shine.Web.Client.Pages.Lists.IndexModel
@{
    ViewData["Title"] = "Мои списки покупок";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h2 mb-0">
        <i class="fas fa-shopping-cart text-primary me-2"></i>
        Мои списки покупок
    </h1>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createListModal">
        <i class="fas fa-plus me-2"></i>Новый список
    </button>
</div>

@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Search and Filter -->
<div class="row mb-4">
    <div class="col-md-6">
        <form method="get" class="d-flex">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" class="form-control" name="searchTerm" value="@Model.SearchTerm" 
                       placeholder="Поиск списков..." />
                <button class="btn btn-outline-secondary" type="submit">
                    Найти
                </button>
            </div>
        </form>
    </div>
</div>

@if (Model.Lists?.Any() == true)
{
    <div class="row">
        @foreach (var listViewModel in Model.Lists)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shopping-list-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-list text-primary me-2"></i>
                                @listViewModel.List.Name
                            </h5>
                            <small class="text-muted">
                                @listViewModel.List.CreatedAt.ToString("dd.MM.yyyy")
                            </small>
                        </div>
                        
                        <div class="mb-3">
                            <div class="d-flex justify-content-between small text-muted mb-1">
                                <span>
                                    <i class="fas fa-shopping-basket me-1"></i>
                                    @listViewModel.TotalItems товаров
                                </span>
                                <span>
                                    <i class="fas fa-check-circle me-1"></i>
                                    @listViewModel.CompletedItems куплено
                                </span>
                            </div>
                            <div class="progress" style="height: 6px;">
                                <div class="progress-bar bg-success" role="progressbar" 
                                     style="width: @(listViewModel.Progress)%" 
                                     aria-valuenow="@listViewModel.Progress" 
                                     aria-valuemin="0" aria-valuemax="100">
                                </div>
                            </div>
                        </div>

                        @if (listViewModel.Items.Any())
                        {
                            <div class="mb-3">
                                <small class="text-muted d-block mb-1">Последние товары:</small>
                                @foreach (var item in listViewModel.Items.Take(3))
                                {
                                    <span class="badge @(item.IsPurchased ? "bg-success" : "bg-secondary") me-1 mb-1">
                                        @if (item.IsPurchased)
                                        {
                                            <i class="fas fa-check me-1"></i>
                                        }
                                        @item.Name
                                    </span>
                                }
                                @if (listViewModel.Items.Count > 3)
                                {
                                    <span class="text-muted small">и еще @(listViewModel.Items.Count - 3)...</span>
                                }
                            </div>
                        }
                    </div>
                    
                    <div class="card-footer bg-transparent">
                        <div class="d-flex gap-2">
                            <a asp-page="Details" asp-route-id="@listViewModel.List.Id" 
                               class="btn btn-primary btn-sm flex-fill">
                                <i class="fas fa-eye me-1"></i>Открыть
                            </a>
                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                    onclick="confirmDelete('@listViewModel.List.Id', '@listViewModel.List.Name')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-4">
            <i class="fas fa-shopping-cart fa-4x text-muted"></i>
        </div>
        <h3 class="text-muted mb-3">
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <text>Списки не найдены</text>
            }
            else
            {
                <text>У вас пока нет списков покупок</text>
            }
        </h3>
        <p class="text-muted mb-4">
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <text>Попробуйте изменить поисковый запрос</text>
            }
            else
            {
                <text>Создайте свой первый список покупок, чтобы начать!</text>
            }
        </p>
        <button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#createListModal">
            <i class="fas fa-plus me-2"></i>Создать список
        </button>
    </div>
}

<!-- Create List Modal -->
<div class="modal fade" id="createListModal" tabindex="-1" aria-labelledby="createListModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="CreateList">
                <div class="modal-header">
                    <h5 class="modal-title" id="createListModalLabel">
                        <i class="fas fa-plus text-primary me-2"></i>
                        Новый список покупок
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label asp-for="NewListName" class="form-label">
                            <i class="fas fa-list me-2"></i>Название списка
                        </label>
                        <input asp-for="NewListName" class="form-control form-control-lg" 
                               placeholder="Например: Продукты на неделю" required />
                        <span asp-validation-for="NewListName" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Отмена
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Создать список
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(listId, listName) {
            if (confirm(`Вы уверены, что хотите удалить список "${listName}"? Это действие нельзя отменить.`)) {
                // Create and submit form for deletion
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '?handler=DeleteList';
                
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'listId';
                input.value = listId;
                
                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const tokenClone = token.cloneNode();
                    form.appendChild(tokenClone);
                }
                
                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Auto-dismiss alerts after 5 seconds
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}
