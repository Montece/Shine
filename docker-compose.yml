networks:
  shine_network:
    driver: bridge

volumes:
  pgdata_users: {}
  pgdata_shopping: {}
  grafana_data: {}

services:
  users-database:
    image: postgres:16
    container_name: shine-database-users
    restart: always
    environment:
      POSTGRES_USER: "shine"
      POSTGRES_PASSWORD: "IEXzYzjos-F0c"
      POSTGRES_DB: UserDb
    ports: ["5432:5432"]
    volumes:
      - pgdata_users:/var/lib/postgresql/data
    networks:
      - shine_network

  users-api:
    build:
      context: ./Shine-Service-Users
      dockerfile: Dockerfile
    container_name: Shine-Service-Users
    restart: always
    depends_on:
      - users-database
    #environment:
      #ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:5000"
    networks:
      - shine_network

  shopping-database:
    image: postgres:16
    container_name: shine-database-shopping
    restart: always
    environment:
      POSTGRES_USER: "shine"
      POSTGRES_PASSWORD: "JTLzYzjos-P8r"
      POSTGRES_DB: ShoppingDb
    ports:
      - "5433:5432"
    volumes:
      - pgdata_shopping:/var/lib/postgresql/data
    networks:
      - shine_network

  shopping-api-1:
    build:
      context: ./Shine-Service-Shopping
      dockerfile: Dockerfile
    container_name: Shine-Service-Shopping-1
    restart: always
    depends_on:
      - shopping-database
    environment:
      #ASPNETCORE_ENVIRONMENT=Development
      INSTANCE_HEADER: "true"
    ports:
      - "5001:5000"
    networks:
      - shine_network

  shopping-api-2:
    build:
      context: ./Shine-Service-Shopping
      dockerfile: Dockerfile
    container_name: Shine-Service-Shopping-2
    restart: always
    depends_on:
      - shopping-database
    environment:
      #ASPNETCORE_ENVIRONMENT=Development
      INSTANCE_HEADER: "true"
    ports:
      - "5002:5000"
    networks:
      - shine_network

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - shine_network

  prometheus:
    image: prom/prometheus:latest
    container_name: Shine-Prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - shine_network

  grafana:
    image: grafana/grafana:latest
    container_name: Shine-Grafana
    ports:
      - "3000:3000"
    networks:
      - shine_network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus